                                                                                                                            
â”Œâ”€â”€(rootðŸ’€kali)-[~/Pentest/Labs/Vulnhub/SkyTower]
â””â”€# sqlmap -u http://192.168.56.101/ --forms
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.5#stable}
|_ -| . [(]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 14:16:18 /2021-02-09/

[14:16:19] [INFO] testing connection to the target URL
[14:16:19] [INFO] searching for forms
[#1] form:
POST http://192.168.56.101/login.php
POST data: email=&password=
do you want to test this form? [Y/n/q] 
> Y
Edit POST data [default: email=&password=] (Warning: blank fields detected): 
do you want to fill blank fields with random values? [Y/n] y
[14:16:48] [INFO] using '/root/.local/share/sqlmap/output/results-02092021_0216pm.csv' as the CSV results file in multiple targets mode
[14:16:48] [CRITICAL] unable to connect to the target URL. sqlmap is going to retry the request(s)
[14:16:48] [WARNING] if the problem persists please check that the provided target URL is reachable. In case that it is, you can try to rerun with switch '--random-agent' and/or proxy switches ('--ignore-proxy', '--proxy',...)
[14:16:48] [INFO] testing if the target URL content is stable
[14:16:49] [WARNING] target URL content is not stable (i.e. content differs). sqlmap will base the page comparison on a sequence matcher. If no dynamic nor injectable parameters are detected, or in case of junk results, refer to user's manual paragraph 'Page comparison'
how do you want to proceed? [(C)ontinue/(s)tring/(r)egex/(q)uit] C
[14:17:00] [CRITICAL] can't check dynamic content because of lack of page content
[14:17:00] [INFO] testing if POST parameter 'email' is dynamic
[14:17:00] [WARNING] POST parameter 'email' does not appear to be dynamic
[14:17:00] [INFO] heuristic (basic) test shows that POST parameter 'email' might be injectable (possible DBMS: 'MySQL')
[14:17:00] [INFO] heuristic (XSS) test shows that POST parameter 'email' might be vulnerable to cross-site scripting (XSS) attacks
[14:17:00] [INFO] testing for SQL injection on POST parameter 'email'
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n] y
[14:17:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:17:06] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:17:06] [INFO] testing 'Generic inline queries'
[14:17:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:17:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:17:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[14:17:07] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[14:17:08] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:17:09] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:17:10] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:17:10] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:17:11] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[14:17:12] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[14:17:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[14:17:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[14:17:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[14:17:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[14:17:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[14:17:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[14:17:13] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:17:13] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:17:13] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:17:13] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:17:13] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[14:17:14] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[14:17:14] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[14:17:14] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[14:17:15] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[14:17:15] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[14:17:16] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[14:17:17] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[14:17:17] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[14:17:18] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[14:17:19] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[14:17:19] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[14:17:20] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:17:21] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:17:21] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[14:17:22] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[14:17:23] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[14:17:23] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[14:17:24] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[14:17:24] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[14:17:25] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[14:17:25] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[14:17:25] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[14:17:25] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[14:17:25] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[14:17:25] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[14:17:25] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[14:17:25] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[14:17:25] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[14:17:25] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[14:17:25] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[14:17:25] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[14:17:25] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[14:17:25] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[14:17:25] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[14:17:25] [INFO] testing 'MySQL inline queries'
[14:17:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[14:17:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[14:17:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[14:17:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[14:17:27] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'
[14:17:27] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'
[14:17:28] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[14:17:28] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[14:17:29] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[14:17:30] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[14:17:30] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[14:17:31] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[14:17:31] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[14:17:32] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[14:17:32] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query)'
[14:17:33] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (heavy query)'
[14:17:33] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query - comment)'
[14:17:34] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (heavy query - comment)'
[14:17:34] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[14:17:34] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[14:18:04] [INFO] POST parameter 'email' appears to be 'MySQL >= 5.0.12 RLIKE time-based blind (comment)' injectable 
[14:18:04] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[14:18:04] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[14:18:04] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[14:18:05] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[14:18:05] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[14:18:05] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[14:18:05] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[14:18:06] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[14:18:06] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[14:18:06] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[14:18:06] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[14:18:06] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[14:18:07] [INFO] checking if the injection point on POST parameter 'email' is a false positive
[14:18:07] [WARNING] false positive or unexploitable injection point detected
[14:18:07] [WARNING] POST parameter 'email' does not seem to be injectable
[14:18:07] [INFO] testing if POST parameter 'password' is dynamic
[14:18:07] [WARNING] POST parameter 'password' does not appear to be dynamic
[14:18:07] [INFO] heuristic (basic) test shows that POST parameter 'password' might be injectable (possible DBMS: 'MySQL')
[14:18:07] [INFO] heuristic (XSS) test shows that POST parameter 'password' might be vulnerable to cross-site scripting (XSS) attacks
[14:18:07] [INFO] testing for SQL injection on POST parameter 'password'
[14:18:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:18:07] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:18:07] [INFO] testing 'Generic inline queries'
[14:18:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:18:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:18:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[14:18:08] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[14:18:09] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:18:10] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:18:11] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:18:12] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:18:13] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[14:18:14] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[14:18:14] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[14:18:15] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[14:18:15] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[14:18:15] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[14:18:15] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[14:18:15] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[14:18:15] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:18:15] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:18:15] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:18:15] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:18:15] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[14:18:15] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[14:18:15] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[14:18:16] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[14:18:17] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[14:18:17] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[14:18:18] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[14:18:18] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[14:18:19] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[14:18:19] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[14:18:20] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[14:18:21] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[14:18:21] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:18:22] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:18:22] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[14:18:23] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[14:18:23] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[14:18:24] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[14:18:25] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[14:18:25] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[14:18:25] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[14:18:25] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[14:18:25] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[14:18:25] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[14:18:25] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[14:18:25] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[14:18:25] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[14:18:25] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[14:18:25] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[14:18:25] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[14:18:26] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[14:18:26] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[14:18:26] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[14:18:26] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[14:18:26] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[14:18:26] [INFO] testing 'MySQL inline queries'
[14:18:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[14:18:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[14:18:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[14:18:27] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[14:18:27] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'
[14:18:27] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'
[14:18:28] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[14:18:28] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[14:18:29] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[14:18:29] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[14:18:30] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[14:18:30] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[14:18:31] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[14:18:31] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[14:18:31] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query)'
[14:18:32] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (heavy query)'
[14:18:33] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query - comment)'
[14:18:33] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (heavy query - comment)'
[14:18:33] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[14:18:34] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[14:18:34] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[14:18:35] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[14:18:35] [INFO] testing 'MySQL AND time-based blind (ELT)'
[14:18:36] [INFO] testing 'MySQL OR time-based blind (ELT)'
[14:18:36] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[14:18:37] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[14:18:37] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[14:18:37] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[14:18:38] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[14:18:38] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[14:18:38] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (heavy queries)'
[14:18:38] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[14:18:38] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[14:18:38] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[14:18:38] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[14:18:38] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (heavy query)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] y
[14:19:43] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:19:43] [CRITICAL] unable to connect to the target URL. sqlmap is going to retry the request(s)
[14:19:43] [WARNING] most likely web server instance hasn't recovered yet from previous timed based payload. If the problem persists please wait for a few minutes and rerun without flag 'T' in option '--technique' (e.g. '--flush-session --technique=BEUS') or try to lower the value of option '--time-sec' (e.g. '--time-sec=2')                                              
[14:19:43] [WARNING] reflective value(s) found and filtering out
[14:19:43] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[14:19:44] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[14:19:45] [WARNING] POST parameter 'password' does not seem to be injectable
[14:19:45] [ERROR] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. As heuristic test turned out positive you are strongly advised to continue on with the tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent', skipping to the next form
[14:19:45] [INFO] you can find results of scanning in multiple targets mode inside the CSV file '/root/.local/share/sqlmap/output/results-02092021_0216pm.csv'                                                                                          

[*] ending @ 14:19:45 /2021-02-09/

                                                                                                                            
â”Œâ”€â”€(rootðŸ’€kali)-[~/Pentest/Labs/Vulnhub/SkyTower]
â””â”€# 
